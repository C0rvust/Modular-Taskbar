[Rainmeter]
SkinWidth=#Skin.Width#
SkinHeight=#Skin.Height#
Update=#UpdateInterval#
DefaultUpdateDivider=-1
AccurateText=1
OnRefreshAction=[!CommandMeasure main.PopUpTimer "Stop 1" "#RootConfig#"][!Move "#Skin.X#" "#Skin.Y#"][!Update][!SetOption Year Formula [TimeYear]][!SetOption Month Formula [TimeMonth]][!UpdateMeasureGroup TimeMeasure][!UpdateMeterGroup Day]
MouseLeaveAction=[!CommandMeasure main.PopUpTimer "Execute 1" "#RootConfig#"]
MouseOverAction=[!CommandMeasure main.PopUpTimer "Stop 1" "#RootConfig#"]
DefaultAlwaysOnTop=-2

ContextTitle=Cycle first day of week
ContextAction=[!WriteKeyValue Variables Module.Time.WeekdayOffset ((#Module.Time.WeekdayOffset#+1)%7)][!Refresh]

[Variables]
@IncludeVar=#@#variables.inc
UpdateInterval=16

; Dicatates size of elements
Module.Time.ElementSize=(#body.ElementSize#+#body.Padding#)
; Dictates starting day of week
; 0 for Sunday, 1 for Monday, 6 for saturaday, etc.
Module.Time.WeekdayOffset=1

; Dicatates popup size
; Do not change
Skin.Width=(7*#Module.Time.ElementSize#+2*#body.Padding#)
Skin.Height=(6*#Module.Time.ElementSize#+#Module.Time.ElementSize#+3*#body.Padding#)

; Do not change
Parent.Position=1462
Skin.X=(clamp((#body.X#+#Parent.Position#-#Skin.Width#/2),(#body.X#),(#body.X#+#body.Width#-#Skin.Width#)))
Skin.Y=(#body.Verticality#=0?(#Body.Y#+#body.Height#+#body.PopUpGap#):(#Body.Y#-#body.PopUpGap#-#Skin.Height#))
EventList=

[Module.Time.StyleControlIcon]
y=(#Module.Time.ElementSize#/2)
h=#body.ElementSize#
InlineSetting=Face | #font.IconName#
InlineSetting2=Size | ([#CurrentSection#:h]*0.75)
InlineSetting3=Color | #Colour.2.Code#,(#Colour.2.Alpha#*(1-(Cos([Module.Time.ControlAnimation]/100*PI/2))))
StringAlign=CenterCenter
SolidColor=0,0,0,1
AntiAlias=1
DynamicVariables=1

[Module.Time.StyleIndString]
y=(#Module.Time.ElementSize#/2)
InlineSetting=Face | #font.DisplayName#
InlineSetting2=Size | #font.SizeStd#
InlineSetting3=Color | #Colour.2.Code#,(#Colour.2.Alpha#*0.50*(Cos([Module.Time.ControlAnimation]/100*PI/2)))
Text=#CurrentSection#
StringAlign=CenterCenter
AntiAlias=1
DynamicVariables=1
Container=Module.Time.Container.Header

[Module.Time.StyleDayString]
Group=Day
InlineSetting=Face | #font.DisplayName#
InlineSetting2=Size | #font.SizeStd#
InlineSetting3=Color | #Colour.2.Code#,#Colour.2.Alpha#
InlineSetting4=Underline
InlinePattern4=[EventDay]
Text=#CurrentSection#
x=((0.5+(([WeekDayOfFirst]-#Module.Time.WeekdayOffset#+(([WeekDayOfFirst]-#Module.Time.WeekdayOffset#<0)?(7):(0))+#CurrentSection#-1)%7))*#Module.Time.ElementSize#)
y=((0.5+(floor(([WeekDayOfFirst]-#Module.Time.WeekdayOffset#+(([WeekDayOfFirst]-#Module.Time.WeekdayOffset#<0)?(7):(0))+#CurrentSection#-1)/7)))*#Module.Time.ElementSize#)
w=(#Module.Time.ElementSize#-#body.Padding#)
h=(#Module.Time.ElementSize#-#body.Padding#)
StringAlign=CenterCenter
SolidColor=0,0,0,1
AntiAlias=1
DynamicVariables=1
Hidden=(#CurrentSection#>[DaysInMonth]?1:0)
Container=Module.Time.Container.Day
LeftMouseUpAction=[!SetOption EventSelect String "[Year][Month]#CurrentSection#"][!UpdateMeasureGroup EventRead][!UpdateMeter Module.Time.EventDetail.Display][!SetOption Module.Time.EventAnimation InvertMeasure 0][!UnPauseMeasure Module.Time.EventAnimation][!UpdateMeasure Module.Time.EventAnimation]
MouseOverAction=[!SetOption #CurrentSection# SolidColor "#colour.3.Code#,#colour.3.Alpha#"][!UpdateMeter #CurrentSection#]
MouseLeaveAction=[!SetOption #CurrentSection# SolidColor "0,0,0,1"][!UpdateMeter #CurrentSection#]

[Module.Time.StyleEventPromptString]
Group=EventPrompt
InlineSetting=Face | #font.DisplayName#
InlineSetting2=Size | #font.SizeStd#
InlineSetting3=Color | #Colour.2.Code#,#Colour.2.Alpha#
InlineSetting4=Weight | 900
y=(#Module.Time.ElementSize#*0.5)
w=(3.5*#Module.Time.ElementSize#)
h=(#Module.Time.ElementSize#)
StringAlign=CenterCenter
SolidColor=0,0,0,1
AntiAlias=1
DynamicVariables=1
MouseOverAction=[!SetOption #CurrentSection# SolidColor "#colour.3.Code#,#colour.3.Alpha#"][!UpdateMeter #CurrentSection#]
MouseLeaveAction=[!SetOption #CurrentSection# SolidColor "0,0,0,1"][!UpdateMeter #CurrentSection#]
Container=Module.Time.Container.Event

[Module.Time.StyleEventDetailString]
InlineSetting=Face | #font.DisplayName#
InlineSetting2=Size | #font.SizeStd#
InlineSetting3=Color | #Colour.2.Code#,#Colour.2.Alpha#
AntiAlias=1
DynamicVariables=1
Container=Module.Time.Container.Event

; CBA to follow naming convention, it's hard enough to code a calendar let alone name it appropriately 

[TimeYear]
Measure=Time
Format=%Y
UpdateDivider=(10000/#UpdateInterval#)

[TimeMonth]
Measure=Time
Format=%m
UpdateDivider=(10000/#UpdateInterval#)

[TimeDay]
Measure=Time
Format=%d
UpdateDivider=(10000/#UpdateInterval#)
OnChangeAction=[!UpdateMeasureGroup TimeMeasure][!UpdateMeterGroup Day]

[Year]
Group=TimeMeasure
Measure=Calc
DynamicVariables=1

[Month]
Group=TimeMeasure
Measure=Calc
DynamicVariables=1
RegExpSubstitute=1
Substitute="^(\d)$":"0\1"

[WeekDayOfFirst]
Group=TimeMeasure
Measure=Time
TimeStamp=[Year]-[Month]-1
TimeStampFormat=%Y-%#m-%#d
Format=%w
DynamicVariables=1

[DaysInMonth]
Group=TimeMeasure
Measure=Calc
Formula=((Month%2=1)&&(Month<=7))||((Month%2=0)&&(Month>=8))?31:(Month=2?(Year%4=0?(Year%100=0?(Year%400=0?29:28):29):28):30)
DynamicVariables=1

[EventParse]
Group=TimeMeasure | EventRead
Measure=String
String=#EventList#
DynamicVariables=1
RegExpSubstitute=1
Substitute="(?![Year][Month]\d{2})\d{8}(.*?)\|\|":""

[EventDay]
Group=TimeMeasure | EventRead
Measure=String
String=[EventParse]
DynamicVariables=1
RegExpSubstitute=1
Substitute="\d{6}(\d{2}).*?\|\|":"^\1$|","\^0(\d)\$\|":"^\1$|","":"^$"

[EventSelect]
Group=EventRead
Measure=String
DynamicVariables=1
RegExpSubstitute=1
Substitute="^(\d{6})(\d{1})$":"\10\2"

[EventDetail]
Group=EventRead
Measure=String
String=[EventParse]
DynamicVariables=1
RegExpSubstitute=1
Substitute="(?![EventSelect])\d{8}(.*?)\|\|":"","[EventSelect](.*?)\|\|":"\1"
OnChangeAction=[!SetOption EventDetail.DisplayCache.ReadParse String "[#CurrentSection#]"]

[EventInput]
Measure=Plugin
Plugin=InputText
SolidColor=#Colour.1.Code#,#Colour.1.Alpha#
FontColor=#Colour.2.Code#
FontFace=#font.DisplayName#
FontSize=#font.SizeStd#
x=(3*#body.Padding#)
y=(#Module.Time.ElementSize#+3*#body.Padding#)
w=(7*#Module.Time.ElementSize#-4*#body.Padding#)
h=(6*#Module.Time.ElementSize#-3*#body.Padding#)
DefaultValue=[EventDetail.DisplayCache]
Command1=!DisableMouseAction Rainmeter "MouseLeaveAction"
Command2=!SetOptionGroup EventCache String "$UserInput$"
Command3=!UpdateMeasureGroup EventRead
Command4=!UpdateMeterGroup EventDetail
Command5=!EnableMouseAction Rainmeter "MouseLeaveAction"
OnDismissAction=[!EnableMouseAction Rainmeter "MouseLeaveAction"]

[EventRemove]
Group=EventRead
Measure=String
String=#EventList#
DynamicVariables=1
RegExpSubstitute=1
Substitute="[EventSelect][EventDetail:EscapeRegExp]\|\|":""

[EventDetail.DisplayCache.ReadParse]
Group=EventRead
Measure=String
DynamicVariables=1
RegExpSubstitute=1
Substitute="\\\|\\":"|"
OnChangeAction=[!SetOption EventDetail.DisplayCache String "[#CurrentSection#]"]

[EventDetail.DisplayCache]
Group=EventRead | EventCache
Measure=String
DynamicVariables=1
RegExpSubstitute=1
Substitute="#CRLF#":""

[EventDetail.WriteCache]
Group=EventRead | EventCache
Measure=String
DynamicVariables=1
RegExpSubstitute=1
Substitute="\|":"\|\","#CRLF#":""

[EventDetail.WriteLogic]
Measure=String
String=[EventDetail.WriteCache]
Disabled=1
DynamicVariables=1
IfMatch=^$
IfMatchAction=[!SetVariable EventList "[EventRemove]"][!WriteKeyValue Variables EventList "[EventRemove]"][!DisableMeasure #CurrentSection#]
IfNotMatchAction=[!SetVariable EventList "[EventRemove][EventSelect][EventDetail.WriteCache]||"][!WriteKeyValue Variables EventList "[EventRemove][EventSelect][EventDetail.WriteCache]||"][!DisableMeasure #CurrentSection#]
IfMatchMode=1

[Module.Time.ControlAnimation]
Measure=Loop
StartValue=0
EndValue=100
Increment=10
IfCondition=(#CurrentSection#=100) || (#CurrentSection#=0)
IfTrueAction=[!PauseMeasure #CurrentSection#]
UpdateDivider=1
OnChangeAction=[!UpdateMeterGroup Time.ControlAnimation]

[Module.Time.EventAnimation]
Measure=Loop
StartValue=0
EndValue=100
Increment=10
IfCondition=(#CurrentSection#=100) || (#CurrentSection#=0)
IfTrueAction=[!PauseMeasure #CurrentSection#]
; This 2nd condition serves to delay control animation when you exit the event prompt, QOL
; Comment out the next three lines if not necessary
IfCondition2=#CurrentSection#=0
IfTrueAction2=[!Delay 600][!EnableMouseAction Module.Time.Container.Header "MouseOverAction|MouseLeaveAction"]
IfFalseAction2=[!DisableMouseAction Module.Time.Container.Header "MouseOverAction|MouseLeaveAction"]
UpdateDivider=1
OnChangeAction=[!UpdateMeterGroup Time.EventAnimation]

[Module.Time.ControlActionPrev]
Measure=Calc
Disabled=1
DynamicVariables=1
IfConditionMode=1
IfCondition=(Month=1)
IfTrueAction=[!SetOption Month Formula 12][!SetOption Year Formula "[Year]-1"]
IfFalseAction=[!SetOption Month Formula "[Month]-1"]
OnUpdateAction=[!DisableMeasure #CurrentSection#][!UpdateMeasureGroup TimeMeasure][!UpdateMeterGroup Day]

[Module.Time.ControlActionNext]
Measure=Calc
Disabled=1
DynamicVariables=1
IfConditionMode=1
IfCondition=(Month=12)
IfTrueAction=[!SetOption Month Formula 1][!SetOption Year Formula "[Year]+1"]
IfFalseAction=[!SetOption Month Formula "[Month]+1"]
OnUpdateAction=[!DisableMeasure #CurrentSection#][!UpdateMeasureGroup TimeMeasure][!UpdateMeterGroup Day]

[Module.Time.Background]
Meter=Shape
Shape=Rectangle 0,0,#Skin.Width#,#Skin.Height#,#body.CornerRadius# | StrokeWidth 0 | Fill Color #colour.1.Code#,#colour.1.Alpha#

[Module.Time.Container.Header]
Group=Time.EventAnimation
Meter=Image
x=(#body.Padding#-([Module.Time.EventAnimation]=100?1:0.25)*#Skin.Width#*(1-Cos([Module.Time.EventAnimation]/100*PI/2)))
y=(#body.Padding#)
w=(7*#Module.Time.ElementSize#)
h=(#Module.Time.ElementSize#)
SolidColor=0,0,0,(255*Cos([Module.Time.EventAnimation]/100*PI/2))
DynamicVariables=1
MouseOverAction=[!SetOption Module.Time.ControlAnimation InvertMeasure 0][!UnPauseMeasure Module.Time.ControlAnimation][!UpdateMeasure Module.Time.ControlAnimation]
MouseLeaveAction=[!SetOption Module.Time.ControlAnimation InvertMeasure 1][!UnPauseMeasure Module.Time.ControlAnimation][!UpdateMeasure Module.Time.ControlAnimation]
MouseScrollUpAction=[!EnableMeasure Module.Time.ControlActionPrev][!UpdateMeasure Module.Time.ControlActionPrev]
MouseScrollDownAction=[!EnableMeasure Module.Time.ControlActionNext][!UpdateMeasure Module.Time.ControlActionNext]
MouseActionCursor=0

[Module.Time.Container.Day]
Group=Time.EventAnimation
Meter=Image
x=(#body.Padding#-([Module.Time.EventAnimation]=100?1:0.25)*#Skin.Width#*(1-Cos([Module.Time.EventAnimation]/100*PI/2)))
y=(2*#body.Padding#+#Module.Time.ElementSize#)
w=(7*#Module.Time.ElementSize#)
h=(6*#Module.Time.ElementSize#)
SolidColor=0,0,0,(255*Cos([Module.Time.EventAnimation]/100*PI/2))
DynamicVariables=1

[Module.Time.Container.Event]
Group=Time.EventAnimation
Meter=Image
x=(#body.Padding#-([Module.Time.EventAnimation]=0?1:0.25)*#Skin.Width#*(-Cos([Module.Time.EventAnimation]/100*PI/2)))
y=(#body.Padding#)
w=(7*#Module.Time.ElementSize#)
h=(#Skin.Height#-2*#body.Padding#)
SolidColor=0,0,0,(255*(1-Cos([Module.Time.EventAnimation]/100*PI/2)))
DynamicVariables=1

[Module.Time.DisplayCurrentDate]
Group=Time.ControlAnimation | Day
MeterStyle=Module.Time.StyleIndString
Meter=String
MeasureName=Month
MeasureName2=Year
x=([Module.Time.Container.Header:w]-#body.Padding#)
Text=%1 / %2
StringAlign=RightCenter
InlineSetting3=Color | #Colour.2.Code#,(#Colour.2.Alpha#*(1-(Cos([Module.Time.ControlAnimation]/100*PI/2))))
InlineSetting4=Weight | 900
LeftMouseUpAction=[!SetOption Year Formula [TimeYear]][!SetOption Month Formula [TimeMonth]][!UpdateMeasureGroup TimeMeasure][!UpdateMeterGroup Day]

[Module.Time.ControlPrev]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleControlIcon
Meter=String
x=(#Module.Time.ElementSize#*0.5)
Text=ArrowLeft
Container=Module.Time.Container.Header
LeftMouseUpAction=[!EnableMeasure Module.Time.ControlActionPrev][!UpdateMeasure Module.Time.ControlActionPrev]

[Module.Time.ControlNext]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleControlIcon
Meter=String
x=(#Module.Time.ElementSize#*1.5)
Text=ArrowRight
Container=Module.Time.Container.Header
LeftMouseUpAction=[!EnableMeasure Module.Time.ControlActionNext][!UpdateMeasure Module.Time.ControlActionNext]

[Sun]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#)%7))*#Module.Time.ElementSize#)
[Mon]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+1)%7))*#Module.Time.ElementSize#)
[Tue]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+2)%7))*#Module.Time.ElementSize#)
[Wed]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+3)%7))*#Module.Time.ElementSize#)
[Thur]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+4)%7))*#Module.Time.ElementSize#)
[Fri]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+5)%7))*#Module.Time.ElementSize#)
[Sat]
Group=Time.ControlAnimation
MeterStyle=Module.Time.StyleIndString
Meter=String
x=((1/2+((7-#Module.Time.WeekdayOffset#+6)%7))*#Module.Time.ElementSize#)

[Module.Time.DayIndicator]
Group=Day
Meter=String
x=(#Module.Time.ElementSize#/2+(([WeekDayOfFirst]+[TimeDay]-#Module.Time.WeekdayOffset#-1)%7)*#Module.Time.ElementSize#)
y=(#Module.Time.ElementSize#/2+(floor(([WeekDayOfFirst]+[TimeDay]-#Module.Time.WeekdayOffset#-1)/7))*#Module.Time.ElementSize#)
w=#Module.Time.ElementSize#
h=#Module.Time.ElementSize#
StringAlign=CenterCenter
AntiAlias=1
DynamicVariables=1
SolidColor=#Colour.3.Code#,(#Colour.3.Alpha#*1)
Hidden=(([TimeYear]=[Year])&&([TimeMonth]=[Month])?0:1)
Container=Module.Time.Container.Day

[1]
MeterStyle=Module.Time.StyleDayString
Meter=String
[2]
MeterStyle=Module.Time.StyleDayString
Meter=String
[3]
MeterStyle=Module.Time.StyleDayString
Meter=String
[4]
MeterStyle=Module.Time.StyleDayString
Meter=String
[5]
MeterStyle=Module.Time.StyleDayString
Meter=String
[6]
MeterStyle=Module.Time.StyleDayString
Meter=String
[7]
MeterStyle=Module.Time.StyleDayString
Meter=String
[8]
MeterStyle=Module.Time.StyleDayString
Meter=String
[9]
MeterStyle=Module.Time.StyleDayString
Meter=String
[10]
MeterStyle=Module.Time.StyleDayString
Meter=String
[11]
MeterStyle=Module.Time.StyleDayString
Meter=String
[12]
MeterStyle=Module.Time.StyleDayString
Meter=String
[13]
MeterStyle=Module.Time.StyleDayString
Meter=String
[14]
MeterStyle=Module.Time.StyleDayString
Meter=String
[15]
MeterStyle=Module.Time.StyleDayString
Meter=String
[16]
MeterStyle=Module.Time.StyleDayString
Meter=String
[17]
MeterStyle=Module.Time.StyleDayString
Meter=String
[18]
MeterStyle=Module.Time.StyleDayString
Meter=String
[19]
MeterStyle=Module.Time.StyleDayString
Meter=String
[20]
MeterStyle=Module.Time.StyleDayString
Meter=String
[21]
MeterStyle=Module.Time.StyleDayString
Meter=String
[22]
MeterStyle=Module.Time.StyleDayString
Meter=String
[23]
MeterStyle=Module.Time.StyleDayString
Meter=String
[24]
MeterStyle=Module.Time.StyleDayString
Meter=String
[25]
MeterStyle=Module.Time.StyleDayString
Meter=String
[26]
MeterStyle=Module.Time.StyleDayString
Meter=String
[27]
MeterStyle=Module.Time.StyleDayString
Meter=String
[28]
MeterStyle=Module.Time.StyleDayString
Meter=String
[29]
MeterStyle=Module.Time.StyleDayString
Meter=String
[30]
MeterStyle=Module.Time.StyleDayString
Meter=String
[31]
MeterStyle=Module.Time.StyleDayString
Meter=String

[Module.Time.EventPrompt.Edit]
MeterStyle=Module.Time.StyleEventPromptString
Meter=String
Text=EDIT
x=([Module.Time.Container.Event:w]*0.25)
LeftMouseUpAction=[!ToggleMeterGroup EventPrompt][!CommandMeasure "EventInput" "ExecuteBatch 1-5"]

[Module.Time.EventPrompt.Done]
MeterStyle=Module.Time.StyleEventPromptString
Meter=String
Text=DONE
x=([Module.Time.Container.Event:w]*0.75)
LeftMouseUpAction=[!SetOption Module.Time.EventAnimation InvertMeasure 1][!UnPauseMeasure Module.Time.EventAnimation][!UpdateMeasure Module.Time.EventAnimation]

[Module.Time.EventPrompt.Confirm]
MeterStyle=Module.Time.StyleEventPromptString
Meter=String
Text=CONFIRM
x=([Module.Time.Container.Event:w]*0.25)
Hidden=1
LeftMouseUpAction=[!EnableMeasure EventDetail.WriteLogic][!UpdateMeasure EventDetail.WriteLogic][!UpdateMeasureGroup EventRead][!UpdateMeterGroup Day][!ToggleMeterGroup EventPrompt]
ToolTipText=Press Enter after you finish editing!

[Module.Time.EventPrompt.Discard]
MeterStyle=Module.Time.StyleEventPromptString
Meter=String
Text=DISCARD
x=([Module.Time.Container.Event:w]*0.75)
Hidden=1
LeftMouseUpAction=[!ToggleMeterGroup EventPrompt]
ToolTipText=Press Enter after you finish editing!

[Module.Time.EventDetail.Display]
Group=EventDetail
MeterStyle=Module.Time.StyleEventDetailString
Meter=String
MeasureName=EventDetail.DisplayCache
x=(2*#body.Padding#)
y=(#Module.Time.ElementSize#+2*#body.Padding#)
w=(7*#Module.Time.ElementSize#-4*#body.Padding#)
h=(6*#Module.Time.ElementSize#-3*#body.Padding#)
ClipString=1
