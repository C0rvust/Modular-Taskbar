[Rainmeter]
SkinWidth=#Skin.Width#
SkinHeight=#Skin.Height#
Update=#UpdateInterval#
DefaultUpdateDivider=-1
AccurateText=1
OnRefreshAction=[!CommandMeasure Main.ActionTimer "Stop 1" "#RootConfig#"][!Move "#Skin.X#" "#Skin.Y#"][!Update]
MouseLeaveAction=[!CommandMeasure Main.ActionTimer "Execute 1" "#RootConfig#"]
MouseOverAction=[!CommandMeasure Main.ActionTimer "Stop 1" "#RootConfig#"]
DefaultAlwaysOnTop=-2

[Variables]
@IncludeVar=#@#variables.inc
UpdateInterval=1000

; Dicatates popup size
Skin.Width=(#Body.Element#*10)
Skin.Height=(#Body.Element#*2+#Body.Padding#*2)

; Do not change
Parent.Position=1394
Skin.X=(clamp((#Body.X#+#Parent.Position#-#Skin.Width#/2),(#Body.X#),(#Body.X#+#Body.Width#-#Skin.Width#)))
Skin.Y=(((#Body.Y#+#Body.Height#/2)<(#ScreenAreaHeight#/2)?(#Body.Y#+#Body.Height#+#Body.PopUp#):(#Body.Y#-#body.PopUp#-#Skin.Height#)))

Format=0
Format0=%3!i! Hours %2!i! Minutes
Format1=%4!i! Days %3!i! Hours %2!i! Minutes

[Module.Battery.StyleInfoString]
h=#Body.Element#
InlineSetting=Face | #Font.Display#
InlineSetting2=Size | #Font.DisplayS#
InlineSetting3=Color | #Colour.2#,#Colour.2.Alpha#
Postfix=[\x00A0]
AntiAlias=1
DynamicVariables=1

[Module.Battery.StyleIconString]
InlineSetting=Face | #Font.Icon#
InlineSetting2=Size | #Font.IconS#
InlineSetting3=Color | #Colour.2#,#Colour.2.Alpha#
InlineSetting4=Color | 0,0,0,0
InlinePattern4=Highlight
InlineSetting5=CharacterSpacing | 0 | (-#Font.IconS#)
InlinePattern5=Highlight
StringAlign=CenterCenter
Prefix=Highlight
AntiAlias=1
DynamicVariables=1

[Module.Battery.Uptime]
Measure=Uptime
Format=[#Format[#Format]]
UpdateDivider=(5000/#UpdateInterval#)
DynamicVariables=1
OnChangeAction=[!UpdateMeter Module.Battery.UptimeDisplay][!Redraw]

; Cheers Khan
[Module.Battery.PSRM]
Measure=Plugin
Plugin=PowershellRM
Line=$b = Get-Ciminstance -Namespace root/WMI -ClassName WmiMonitorBrightness
Line2=$m = Get-WmiObject -Namespace root/WMI -ClassName WmiMonitorBrightNessMethods
Line3=function Set-Brightness {
Line4=param([int] $brightness = 100)
Line5=$m.WmiSetBrightness(0, $brightness)
Line6=}
Line7=return $b.CurrentBrightness
UpdateDivider=(500/#UpdateInterval#)
OnChangeAction=[!UpdateMeterGroup Module.Battery.BrightnessSlider][!Redraw]

[Module.Battery.Background]
Meter=Shape
Shape=Rectangle 0,0,#Skin.Width#,#Skin.Height#,#Body.Corner# | StrokeWidth 0 | Fill Color #Colour.1#,#colour.1.Alpha#

[Module.Battery.UptimeIcon]
MeterStyle=Module.Battery.StyleIconString
Meter=String
x=(#Body.Padding#+#Body.Element#*0.5)
y=(#Body.Padding#+#Body.Element#*0.5)
w=#Body.Element#
h=#Body.Element#
Text=Time
DynamicVariables=1
LeftMouseUpAction=[!UpdateMeter #CurrentSection#][!SetVariable Format "(#Format#=0?1:0)"][!UpdateMeter #CurrentSection#][!WriteKeyValue Variables Format "(#Format#=0?1:0)"][!UpdateMeasure Module.Battery.Uptime]
MouseOverAction=[!SetOption "#CurrentSection#" "InlineSetting4" "Color | #*Colour.2*#,(#*Colour.2.Alpha*#*0.5)"][!UpdateMeter "#CurrentSection#"][!Redraw]
MouseLeaveAction=[!SetOption "#CurrentSection#" "InlineSetting4" "Color | 0,0,0,0"][!UpdateMeter "#CurrentSection#"][!Redraw]

[Module.Battery.UptimeDisplay]
MeterStyle=Module.Battery.StyleInfoString
Meter=String
MeasureName=Module.Battery.Uptime
x=(#Skin.Width#-#Body.Padding#)
y=(#Body.Padding#+#Body.Element#*0.5)
InlineSetting4=Weight | 900
InlinePattern4=\d
StringAlign=RightCenter

[Module.Battery.BrightnessIcon]
MeterStyle=Module.Battery.StyleIconString
Meter=String
x=(#Body.Padding#+#Body.Element#*0.5)
y=(#Body.Padding#+#Body.Element#*1.5)
w=#Body.Element#
h=#Body.Element#
Text=Brightness
LeftMouseUpAction=[!CommandMeasure Module.Battery.PSRM "Set-Brightness 40"][!UpdateMeasure Module.Battery.PSRM]
MouseOverAction=[!SetOption "#CurrentSection#" "InlineSetting4" "Color | #*Colour.2*#,(#*Colour.2.Alpha*#*0.5)"][!UpdateMeter "#CurrentSection#"][!Redraw]
MouseLeaveAction=[!SetOption "#CurrentSection#" "InlineSetting4" "Color | 0,0,0,0"][!UpdateMeter "#CurrentSection#"][!Redraw]

[Module.Battery.StyleSliderShape]
Group=Module.Battery.BrightnessSlider
x=(-[#CurrentSection#:w]*1.5)r
y=(#Body.Padding#+#Body.Element#*1.5)
w=(#Body.Element#*0.4)
h=(#Body.Element#*0.75)
Shape=Rectangle (-[#CurrentSection#:w]),(-[#CurrentSection#:h]*0.5),[#CurrentSection#:w],[#CurrentSection#:h],2 | StrokeWidth 0 | Extend Extend
Extend=Fill Color #Colour.2#,(#Colour.2.Alpha#*((#CurrentSection#*10<=[Module.Battery.PSRM])?1:0.25))
DynamicVariables=1
LeftMouseDownAction=[!CommandMeasure Module.Battery.PSRM "Set-Brightness (#CurrentSection#*10)"][!UpdateMeasure Module.Battery.PSRM]

[10]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape
x=(#Skin.Width#-#Body.Padding#)

[9]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[8]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[7]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[6]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[5]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[4]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[3]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[2]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape

[1]
MeterStyle=Module.Battery.StyleSliderShape
Meter=Shape
